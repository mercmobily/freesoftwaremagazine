-
    name: ncjones
    mail: ''
    subject: 'No surprise'
    hostname: 203.184.32.238
    created: '1221133596'
    body: "It is no surprise that the license used in sourceforge projects does not appear to have any effect on the levels of activity. Simply by being on sourceforge all these projects already have everything they need to build an active development community. Using a copyleft license doesn't affect the development process used in community-driven projects so we shouldn't expect them to be more active.\r\n\r\nSince the goal of the GPL is not to make sourceforge projects more active, judging its effectiveness by measuring the activity of projects using this license seems rather pointless. Its intention is to give freedom to the users of software and make it easier to create derivative works or branches, so perhaps a better measure for the effectiveness of copyleft would be to count the number of successful derivative projects."
-
    name: 'John Edwards'
    mail: ''
    subject: 'Interesting.  So how are we'
    hostname: 128.113.199.128
    created: '1221160456'
    body: "Interesting.  So how are we now to explain the popularity of Linux relative to BSD?  The BSD projects are much more centralized, and they were not originally intended for desktops, but I am just guessing.\r\n\r\nAs you said, copyleft is still useful anyway.  It keeps code from becoming non-free, which is what it was intended to do.  It would be interesting to compare things like number of forks, integration with other projects, code \"hijacking\" for copyleft and non-copyleft projects.\r\n\r\nOf course, we already know copyleft is not essential for free software projects- the BSD tradition has survived for over 30 years."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'freedom != copyleft'
    hostname: 68.93.224.4
    created: '1221165638'
    body: "You don't need a copyleft to be free to make derivatives, just a free license. All of the projects being considered here are \"free\" in that sense.\r\n\r\nThe distinction is between projects which legally enforce derivatives to be free-licensed (copyleft) and those that don't (non-copyleft).\r\n\r\nCopyleft doesn't make any one person \"more free\". It can be argued that it makes the project \"stay free\", but that's a different matter: each individual user has certain freedoms curtailed (i.e. the right to make proprietary derivatives), when compared to non-copyleft free projects.\r\n\r\nIt is a good suggestion that SF provides so much support for developers that it is possible that contribution is so easy as to make a legally-enforced copyleft unnecessary.\r\n\r\nBut if so, then why continue to use copyleft licenses? \r\n\r\nThey make users less \"free\" in the sense you mean (they restrict what you can do with derivatives), so they do carry a burden, even if it is slight. So, they need to be doing something helpful to make their use \"economically rational\".\r\n\r\nOf course people could use them _irrationally_ -- out of spite, for example, intending to harm would-be proprietary users. But if there are no _positive_ results, then such _negative_ effects are not rational or ethical, are they?."
-
    name: 'Mauro Bieg'
    mail: ''
    subject: 'only on rare occasions copyleft becomes important'
    hostname: 85.5.103.146
    created: '1221209078'
    body: "<cite>it is possible that contribution [to SF] is so easy as to make a legally-enforced copyleft unnecessary.\r\nBut if so, then why continue to use copyleft licenses?</cite>\r\n\r\nThe point of using copyleft is not attracting more users to participate in a project, but (as you said) rather to keep all the derived code free.\r\n\r\nLet's be honest, in most cases copyleft absolutely doesn't matter; about 95% of all code under a copyleft license never is in danger of being assimilated and made proprietary, simply because no one has an interest in using that code in a proprietary product. But in the rare case that this danger becomes real, and someone wants to take, use and sell your code without sharing his improvements back with you, in that rare case copyleft does matter and becomes very important indeed. Then copyleft is the only way to prevent your code from being assimilated and if your project hasn't been under a copyleft license from the very beginning, there is nothing you can do about it now.\r\n\r\nBecause in most cases copyleft doesn't matter, people don't think about it as a criteria when joining or contributing to a SF project, no surprise. (Or if you have a patch for a program, have you ever considered not submitting it because the program is under a non-copyleft-license?) Still, in rare situations copyleft can become crucial and we thus should keep using it as much as we can."
-
    name: 'Ryan Cartwright'
    mail: ''
    subject: 'Is it possible you are mis-interpreting "activity"?'
    hostname: 82.108.129.98
    created: '1221231118'
    body: "Having viewed the \"SourceForge Stats Demystified\" posting I noted that the activity percentile for a project is \"a combination of three different classes of activity: traffic, development, and communication.\"\r\n\r\nOnly one of those really represents developer activity, the other two are mostly about usage. The development activity is measured by the \"number of CVS or SVN commits, the number of days since the last file release, and the number of days since the most recent project admin login\". So with a project that is more stable or has a single developer this would bring the development activity percentile down.\r\n\r\nTo give you an example of how activity != development activity, I have two active projects on SF and I am the sole developer on each. I have never made a CVS/SVN commit to either and don't log in as admin that often. The last release for the one (RyansIOB) was in January 2008. For the other (RyansEDS) it was in April 2007. Both have development status of 5-Production/Stable and get some but not huge amounts of web traffic or downloads. With that in mind you would expect the activity percentiles to be quite low for both but RyansIOB has an activity of 96% and RyansEDS, 93%. Both have copyleft licences.  It seems that development activity does make up a large part of what constitutes project activity.\r\n\r\nOn the other hand a third SF project of mine which is in 2-Pre-Alpha stage and has had no activity of any kind other than to test out an SVN commit which was then wiped, has an activity percentile of 83%!\r\n\r\nOn that note it may be fair to say that SF activity percentiles are only really useful to find trends within a single project?\r\n\r\ncheers\r\nRyan"
-
    name: pachelbel
    mail: ''
    subject: 'Ways to measure activity'
    hostname: 200.54.71.227
    created: '1221236717'
    body: "Terry, good post. The stance about the licenses is a never ending one. Your statistics show in effect that many developers like to publish work, more than insist on keeping the fruits in the free world. One criterion I have not seen in your analysis, though, is the complexity of the applications - a single-man app is probably simple.\r\n\r\nThe reason I heard for Linux being more popular than *BSD is the consequence of the legal action in 1993. As a result, a whole bunch of the developers reacted by moving to a project that would keep clear from further actions - and they tend to be more \"missionaries\" than those who joined the free software at a later stage. What I see is that Linux, and GPL software in general, is more visible and therefore ends up more in the statistics. BSD software is sometimes reused discretely in commercial products (where it is extremely difficult to measure its impact) or in niche applications (like the public DNS backbones, for instance) and these extensions tend to disappear from the figures. The BSD's tend to work more on technologies than products and use the 3 major distributions as a nest for development and proof of concept and the systems are usually high profile, high quality environments. To be honest, I like Linux but often feel \"tight on the edges\" when I compare it to FreeBSD - but that's a personal impression.\r\n\r\nNow, as a developer, if I had to base a product on other applications, my choice for the license would depend on the target: for a free application, I would not care much but for a commercial one, I would prefer BSD, MIT, Apache or the likes. If you consider the big players in the free software, like Apache or PostgreSQL, they often do too - or apply a dual license like MySQL."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Like insurance'
    hostname: 68.93.224.4
    created: '1221268165'
    body: "Yes, that's one way to look at it: it's like insurance. Odds are you never need it, but if you do, it's important.\r\n\r\nThe only thing that concerns me about this analysis, is \"What is it really _protecting_?\"\r\n\r\nIt obviously is _attacking_ proprietarization (if that's a word) of a free software project.\r\n\r\nBut, if many developers will continue to contribute to the free project, then why does it matter if there is a proprietary competitor? (Or rather _does_ it really matter?)\r\n\r\nI have to admit that instinctively, I agree with you that this is important, but I have trouble rationalizing it (and it's easy for me to see how this could be something that people -- including me -- will react irrationally towards)."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Interesting examples'
    hostname: 68.93.224.4
    created: '1221268446'
    body: "Well, your examples show how off-target the activity numbers can be, I suppose. It would be better to measure pure CVS activity (and possibly it would be better to do those in some absolute way, such as \"net SLOC altered per month\" or something).\r\n\r\nI'm _still_ pretty surprised that copyleft makes no difference to these numbers, though. I would've expected it to have _some_ impact, even with this kind of consideration.\r\n\r\nIt could be, of course, that \"activity\" is _so dominated_ by page views or some other measure that has little to do with development activity that no development effects show up. But that seems a little unlikely, given that the numbers are supposed to measure activity rather than popularity."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Developer count'
    hostname: 68.93.224.4
    created: '1221269498'
    body: "Thanks!\r\n\r\n> One criterion I have not seen in your analysis, though, is the complexity of the applications - a single-man app is probably simple.\r\n\r\nYep, that was my thought. The best I could do without privileged access (or crawling the site) was to look at the Google searches, to get some idea of how developer count is distributed. Unfortunately, that number can't really be trusted because it's such a tiny sample and not necessarily unbiased.\r\n\r\nAlso, even if it were definitive, it doesn't really answer the question, it just shows the potential for masking of effects on large projects by the overwhelming majority of small ones (the _interesting_ thing, actually, is that it isn't as peaky as I'd have expected -- but that could be caused by bias in the Google crawler).\r\n\r\nI've already placed a support request with SF to see if they'd be willing to give me something I can use to do that kind of analysis. I think it could be interesting.\r\n"
-
    name: 'Mauro Bieg'
    mail: ''
    subject: 'why attacking'
    hostname: 85.5.103.146
    created: '1221300602'
    body: "why attacking proprietarization?\r\n<ul>\r\n<li>strategic goal: well, if your goal is to spread free software and lower the market share of proprietary software you certainly don't want free software to become proprietary. here the whole free software rationale comes in, about preserving users freedoms. u dont want somebody to take the firefox code, make it proprietary and implement a small but cool killer feature so everybody will use this version and most users are deprived of their freedom (the new firefox might start playing dirty; like IE did against netscape, not adhering standards etc).</li>\r\n<li>personal motivation: as a free software developer, if you decide to not <i>give away your software for free</i> but share it within a community, you can limit the community to only include people that are willing to share back their improvements. you'll only share within the free software community, not with just everyone (like proprietary software developers)</li>\r\n<li>and closely related to the point above, you can look at it as a moral question: it is unjust if you decide to share your work for free and someone else takes it, doesn't share his improvements and makes a profit from that on top of it.\r\n</ul>\r\n\r\nAs I said, in almost all software projects these aspect never come to play. and because it's not a very probable danger, people don't think about it when contributing to a project. but in the rare case that proprietarization does happen, you just wish you'd have had copyleft."
-
    name: mattflaschen
    mail: ''
    subject: 'Missing the point'
    hostname: 128.61.81.101
    created: '1221301136'
    body: "You're missing the point so badly it's like you weren't even aiming.  I don't use copyleft licenses for any of your reasons, and I don't think most others do either.\r\n\r\nI use copyleft for one reason:\r\n\r\nI want people to use my software freely, and I don't want them to take that freedom away from future users if they make and distribute modifications.\r\n\r\nYou can not prove that philosophy invalid through any amount of misused statistical data.\r\n\r\nThe reason you suggest for copyleft is totally inapplicable to me:\r\n\r\n\"Copyleft encourages contributions (because it eliminates fear of co-option of ones work)”.\"\r\n\r\nIt would be nice if people contributed code back to my project, but I don't care if they don't.  What I do care about is that any derived code they release is free.\r\n\r\nActing like copyleft is some unproven theory (\"Also, one line of evidence does not tear down an entire theory. There are a number of indirect evidences that copyleft is useful\") is absurd.  Do you think it's a coincidence or an accident that there are dozens of proprietary forks of BSD but not a single (legal) proprietary fork of the Linux kernel?  No...the Linux devs decided they didn't want proprietary forks, they used the GPL, and surprise, there are none.  It certainly seems like it worked out for them and thousands of other developers.\r\n\r\n\"The question here is whether it has a practical benefit of encouraging people to contribute to development projects.\"\r\n\r\nNo, that is not and has never been the question.  The question is whether all future users of my software will have the 4 freedoms."
-
    name: admin
    mail: ''
    subject: 'I need to jump in...'
    hostname: 79.31.36.111
    created: '1221301520'
    body: "Hi,\r\n\r\nI need to jump in because this is important:\r\n\r\n\"You're missing the point so badly it's like you weren't even aiming.\"\r\n\r\nWhat kind of state of mind do you expect Terry to have when he replies to you?\r\n\r\nPlease.\r\n\r\nMerc."
-
    name: skOre
    mail: ''
    subject: 'Wrong focus with wrong hypothesis leads to no results'
    hostname: 80.142.37.48
    created: '1221306512'
    body: "The general misconception in this article is this:\r\n\r\n<ol><li>I want to look at numbers to find something out about a social phenomenon - so I look at a popular site that has numbers</li>\r\n<li>I set up a hypothesis which is my own opinion</li>\r\n<li>I take the numbers I find and try to apply them to my hypothesis</li></ol>\r\n\r\nThis is a logical fallacy in many ways. I will try to give you a good list of why it is wrong:\r\n\r\n<strong>Sourceforce == Open Source <= Free Software</strong>\r\nSourceforge is by no means representational as it is OSI related which is more akin to the apolitical Torvalds type of programmer (your stats seem to be OSI centric as well) - take GNU Savannah if you want to find something out about Free Software.\r\n\r\n<strong>Numbers about Software</strong>\r\nThe numbers you look at (activity, communication) say something about people and only people. The reason why you have ambiguous results is because people are people no matter what license they program under.\r\n\r\n<strong>Numbers are complete?</strong>\r\nI know a good lot of projects that use SF only for a free SVN. That there is less communication might be because the projects has its own forum or chatroom. Activity might be completely elsewhere as well - not all software is made equal and surely isn't developed equally.\r\n\r\n<strong>Copyleft == Contributions?</strong>\r\nCopyleft is about freedom and freedom only. It never was about making cooperation possible in some special way. It IS about factoring out one possibility - that software is made non-free, but that does not have to imply that it encourages contributions.\r\n\r\n<strong>Copyleft == Protecting Freedom</strong>\r\nYou are mistaken in your understanding of what the Free Software movement means by \"free\". Of course it also means that people can share development of software, but we very much stress the importance that this freedom has to be protected. We say that we want to be able to take a certain level of freedom for granted and THEN we can work on software together.\r\n\r\nMaybe some examples on where you went wrong would be handy, so let me go through your train of thought:\r\n\r\n<strong>\"...the one measure I could derive of how much copyleft actually works showed that copyleft made no difference whatsoever! If true, this means a lot of free software’s social theory is wrong and many things will have to be re-thought.\"</strong>\r\n\r\nYou fail to state what this social theory is (it would have helped to show how much you know about it) and why it has to be re-thought.\r\n\r\n<strong>\"However, while this sounds good in theory, it’s a challenge to prove it quantitatively. Fortunately, there is Sourceforge.\"</strong>\r\n\r\nBecause the only thing you can prove something is by quantity? Oh, and it certainly does NOT sound good in theory. Weasel words?\r\n\r\n<strong>\"The easiest thing to test is “How popular are copyleft licenses?”\"</strong>\r\n\r\nOh yes, because that is a number we have somehow completely missed to check on.\r\n\r\n<strong>\"If you ask most developers, they’ll say they want a copyleft, because they want to avoid their work being co-opted or exploited (or even “hijacked”). That implies an assumption that a copyleft license will encourage more people to feel more comfortable about contributing their work to the project.\"</strong>\r\n\r\nNo, it does not imply that. You are projecting an assumption. The only thing it implies that the GPL discourages any EEE strategy.\r\n\r\n<strong>\"That led me to a working hypothesis that: “Copyleft projects will be more active than non-copyleft projects”\"</strong>\r\n\r\nWhich is where you went wrong. How does the potential to cooperate imply that the gold standard to measure success is the overall activity? But I know why you chose that hypothesis:\r\n\r\n<strong>\"And that hypothesis is testable with the data I have available.\"</strong>\r\n\r\nWell, how terribly convenient.\r\n\r\nThen your numbers show that all activity is very similar despite license difference and that leads you to the conclusion:\r\n\r\n<strong>\"Copyleft has no practical advantage?\"</strong>\r\n\r\nVery cleverly put into a question. Well - you assumed that Copyleft was created to have a practical advantage in a certain field and your data is inconclusive. That, to you, means that your hypothesis is proven.\r\n\r\n\r\n<strong>Conclusion:</strong>\r\nYou found out that people have somewhat different levels of activity.\r\n\r\nThe \"Open Source\" world is certainly very similar and thus you get pretty much similar results between groups within it. Still - all that has nothing to do with copyleft and especially not with Free Software as social concept. You might be better off to check what you test for next time.\r\n\r\nI'm really surprised that this article showed up on a site centered around Free Software. It has a terrible taste of FUD and confusion."
-
    name: pachelbel
    mail: ''
    subject: 'Congratulations :-)'
    hostname: 200.104.95.68
    created: '1221328020'
    body: "Terry, I've been watching the popularity of your article and the fluctuations clearly show you hit the point right in the center :-)\r\n\r\nIn the comments I see advocates of both GPL and \"most of the others\", I mean MIT/BSD/Apache like. I don't think there is anything wrong with any of the 2 approaches. BSD has survived for 30 years despite a big hurricane in the 90's and GPL is being challenged in court now to protect its followers. This sounds all fine to me: a developer can perfectly decide what he/she wants to do with his/her own code, and even make it proprietary - geeks may traditionally live on junk food, they still have to pay for it :-)\r\n\r\nTo answer briefly to John Edwards, the popularity of Linux is partly due to the lawfight that BSD had to face. There was another project picking up at that  time and the main developers massively jumped on it thinking \"lawfights never again\" - and the GPL was the right approach to avoid it. So the Linux crowd should give a warm thank you to the people they usually hate, i.e. a proprietary editor (AT&T in this case) :-)\r\n\r\nFinally, to follow up on the \"project complexity\" point I raised, we would need a metrics like \"function points\" to estimate the real extent (but then, do you take into account libraries, artifically inflated code with useless functions...) and the degree of redundance of the project (I could start 10 text editor projects in Sourceforge but I'm not sure it would be a major contribution to the OpenSource community). In the end, whatever metrics you use to give a ranking, you will always find people fighting your conclusions... What a pity."
-
    name: Balzac
    mail: ''
    subject: 'Blocking proprietary derivatives protects the project''s identity'
    hostname: 72.229.126.123
    created: '1221345164'
    body: "I would not want my favorite GPL-licensed free software projects to be confused with proprietary derivatives. \r\n\r\nThe source code of free software projects are protected by some parts of the copyleft license, and the identity and integrity of the project are protected by the stipulation which prevents proprietary derivatives.\r\n\r\nIt's not resentment, although I'll confess to feeling some resentment against various proprietary software companies.\r\n\r\nI resent it when recruiters ask for my resume as a Word .doc or Adobe .pdf. I resent when employers request Photoshop or Dreamweaver as if you're not a graphic or web designer without using specific proprietary software.\r\n\r\nI resent all the various proprietary media codecs which make content inaccessible."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'And you''re missing my point, too...'
    hostname: 68.93.224.4
    created: '1221368917'
    body: "Thanks for your comment. However, we agree on the goal of wanting users to continue to have the \"four freedoms\" in their software.\r\n\r\n> I want people to use my software freely, and I don't want them to take that freedom away from future users if they make and distribute modifications.\r\n\r\nThe choice of whether to use a copyleft or not has no bearing on whether users are free to use _your_ software.\r\n\r\nProprietary derivatives cannot possibly \"take that freedom away\" from future users (by definition, an extra alternative cannot reduce freedom). It can only give them a non-free alternative (under the assumption that this alternative is worthless, this has no impact on user freedom, because they are still just as free to use the free version). Only free derivatives  can _give_ them freedoms (and if there are _no_ derivatives, there are no freedoms to be had in them).\r\n\r\nThus the only mechanism by which allowing proprietary derivatives can \"take that freedom away\" from users is _if_ the existence of the proprietary alternative negatively effects the production of the free alternative (for example, if the same contributions would've been made under a free license had the license required it, but weren't because it didn't).\r\n\r\nThis may or may not be true. But it is a _factual_ question, subject to empirical investigation.\r\n\r\nIf non-copyleft projects _were_ threatened by the proprietary competitors that spring up from them, then you would expect to be able to _measure_ the impact of that threat if you look at a large number of copyleft and non-copyleft projects and compare their success rates.\r\n\r\nIn fact, based on the degree of faith that the free software community puts into copyleft, I expected to _easily_ measure this effect. In all honesty, I was very surprised to not find an effect, even in this rather crude bulk study.\r\n\r\nYet, thus far, I can't. That suggests that (possibly) no such threat really exists (or at least, it is a much smaller threat than I assumed).\r\n\r\nThus, this research (while not conclusive) challenges the assumption that a copyleft is _needed_ to protect the four freedoms for users of your work or future free derivatives of it.\r\n\r\nPersonally, I still suspect that there _is_ an impact from the licensing choice, but that it is simply a more subtle or narrow effect than would show up in this kind of study. However, even that is fairly interesting.\r\n"
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Copyleft == Protecting Freedom?'
    hostname: 68.93.224.4
    created: '1221371685'
    body: "> Copyleft == Protecting Freedom\r\n> [...]\r\n> we very much stress the importance that this freedom has to be protected [...]\r\n\r\nExactly.\r\n\r\nThat is the assumption that is being tested here: _IS_ copyleft necessary to protect the freedom of free licensed software?\r\n\r\nSo long as the free software projects are unaffected, the existence or non-existence of proprietary forks is a red herring. For those who only use free software, they are irrelevant.\r\n\r\nThus copyleft only promotes freedom for users if it promotes the production of free software to serve them. If it solely eliminates proprietary software (but does nothing to create free replacements for it), then it is a net loss for society (how much of a loss is debatable -- some free software advocates would say very little, but the point is that it is not a gain).\r\n\r\nIt is only a gain if copyleft succeeds in protecting free software development. Or to put it another way, proprietary software can only have a _negative_ impact on user freedoms if it somehow _takes away_ free options, not if it merely provides non-free options. By definition, additional options can never reduce your freedom.\r\n\r\nYour arguments are actually based on a miscalculation of \"opportunity cost\":\r\n\r\nIt is exactly the same fallacy as occurs when proprietary media companies attempt to compute \"lost sales\" from \"illegally downloaded\" media by multiplying the downloads by the per-copy sticker price. They are of course assuming that every person who downloads for free would, if that ability were taken away, buy a copy for whatever sale price the company offers. Which is a ludicrous assumption, of course.\r\n\r\nSimilarly however, copyleft advocates often make the mistake of assuming that each proprietary derivative of a non-copyleft work represents a lost free derivative if only the work were copylefted. But of course, in some cases, the derivative in question would never have been created if it weren't allowed to be proprietary (hence nothing was actually lost by allowing the proprietary derivative).\r\n\r\nMeanwhile, free derivatives may continue to be created, with or without copyleft. They, of course, are unaffected by the licensing.\r\n\r\nNow of course, just because it's unproven doesn't mean it's untrue: it could be that proprietary forks _do_ have a negative impact on the creation of free software and therefore on the \"user freedoms\" that result from it. But again, that's a factual question. And it's the one I was interested in answering.\r\n\r\nAs for choosing Sourceforge, it is simply one of the largest collections of free software development projects (where would you have gone to study this?).\r\n\r\nThe ideological considerations are essentially irrelevant to this particular point (the effect in question is objective, so it really doesn't matter what the participants' politics are). However, since 80% of the projects are under copyleft licenses that would seem to refute your claim that Sourceforge is biased against them somehow: clearly most SF developers agree with your insistence on the need for copyleft.\r\n"
-
    name: mattflaschen
    mail: ''
    subject: 'Missing the goal of copyleft'
    hostname: 128.61.81.101
    created: '1221452793'
    body: "\"Proprietary derivatives cannot possibly “take that freedom away” from future users (by definition, an extra alternative cannot reduce freedom). It can only give them a non-free alternative (under the assumption that this alternative is worthless, this has no impact on user freedom, because they are still just as free to use the free version).\"\r\n\r\nI know they're still free to use my original free version.  I never said otherwise.  The issue is that I want users to be able to modify and redistribute any and all derivatives in addition.  Copyleft is the only way I can accomplish that.\r\n\r\n\"if the existence of the proprietary alternative negatively effects the production of the free alternative (for example, if the same contributions would’ve been made under a free license had the license required it, but weren’t because it didn’t).\"\r\n\r\nI've already said that I don't care whether people work on my free version.  I'm more than happy if someone decides, hey, I don't like the way the original developer works and I'd rather fork.  This will show up as the SF activity on my project dropping to near zero.  However, if they distribute a modified version, it will still be free."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Protecting user freedoms is my goal'
    hostname: 68.93.224.4
    created: '1221580471'
    body: "Well, _you_ may not care whether using a copyleft actually protects (or provides) freedom to users, and you may be perfectly content merely to remove proprietary options. No doubt, there are many who agree with you.\r\n\r\nHowever, _I do care about freedom_, and I don't think I'm alone.\r\n\r\n_I_ am therefore _very_ interested in whether it succeeds at achieving that goal: _does_ eliminating proprietary derivatives contribute to the provision of free options to the user by promoting free derivatives?\r\n\r\nThat requires answering empirical questions. And that is what I've begun to explore here."
-
    name: igli
    mail: ''
    subject: 'Reconsider your method.'
    hostname: 91.84.123.143
    created: '1221747367'
    body: "> Well, your examples show how off-target the activity numbers can be, I suppose.\r\n\r\nWhich kinda invalidates the whole thing, statistically speaking. Honestly, this article is really flimsy, and the \"conclusions\" both erroneous and sensationalist. I'm sorry your gut instinct that there would be some difference was not fulfilled. Any programmer will tell you (wrt profiling): gut instincts are useless, numbers matter. You've simply gone for the wrong ones.\r\n"
-
    name: skOre
    mail: ''
    subject: 'So much for an answer that does not answer anything.'
    hostname: 77.182.228.42
    created: '1222431379'
    body: "Your hypothesis was that you tried to prove the relationship between productivity and license used.\r\n\r\nNow that I have shown you that it is impossible to \"prove\" something like that in the first place, especially with the means you employed, you try to move the argument to whether or not copyleft actually protects development or not.\r\n\r\n<strong>This is not (and never has been) in question. There are numerous examples where the GPL helped protect Free Software projects from proprietary derivatives.</strong>\r\n\r\nThe major difference between the GPL and non-copyleft licenses is that the GPL side says \"hey, if you think its good to share, why don't you share as well?\" where as the MIT/BSD/etc. folks say \"everything is fine with me\".\r\n\r\nReality has shown that a lot of proprietary vendors are just <strong>waiting</strong> for a weak spot to use for their own gain (TIVO anyone?). After all, its a logical consequence - most of the big players in software are solely profit oriented and you can never make more profit than stealing and selling something as your own.\r\n\r\nAnd thats what we don't want and that is why we protect ourselves from this possibility.\r\n\r\n<strong>There is nothing to argue about this point. It is used, it works.</strong> You seem to be more attracted to a wishy-washy \"lets all share and be happy\". But that doesn't work with humans.\r\n\r\n\r\nI'm not sure why you bring up opportunity costs - as nobody has talked about this - so I guess you're trying to make a point instead of addressing something I've said.\r\n\r\nSo let me answer that with a straight reply as well: <strong>We don't care about opportunity cost. You address a dead point.</strong>\r\n\r\nWe don't care about people making software proprietary because we have excluded ourselves from this possibility. And we especially don't care about people who wouldn't write software if they cannot make it proprietary.\r\n\r\nWhat I live in is an ecosystem in which participants have agreed on a common ground for sharing. The only difference from the non-copyleft folks, and this might be my opinion, is that we are a little more aware of the rest of the world and don't want to allow other people to be fools. It is a very complex and expensive understanding of fairness, but I'm convinced that its prevalence shows how successful it is.\r\n\r\n(as for Sourceforge - I did mention Savannah - excluding that from your calculation means that you left out large chunks of GNU)\r\n\r\n(you also still seem to be confused about the difference of Free Software and Open Source. Please read about it.)"
