-
    name: quasipedia
    mail: ''
    subject: 'One of the best dissertations I heard in a while...'
    hostname: 82.182.85.183
    created: '1253822072'
    body: "Just took a minute to express my appreciation for this article. Insightful and pragmatic. Elegant in its formulation. Very enjoyable to read.\r\n\r\nMy favourite bit: « Does it matter whether you say that “freedom to modify” entails “ability to modify” or the reverse? Not nearly as much as knowing that they are irrevocably interlocked! »\r\n\r\nWell done!"
-
    name: bogdanbiv
    mail: ''
    subject: 'Awsome article'
    hostname: 188.25.224.145
    created: '1256195602'
    body: 'Thanks Terry for such a good read!'
-
    name: sam_tuke
    mail: ''
    subject: 'unjustified dismissal'
    hostname: 78.33.217.161
    created: '1257089550'
    body: "Great article, and I'm very glad to see articulate discussion about these core subjects. Not enough is said about these matters.\r\n\r\nHowever, I disagree strongly on several points that your article raises. I'll take it point by point in an effort to not misrepresent your views and keep focussed on the statements that you have made.\r\n\r\n\"What I hope is that there is a way to make a system that responds better to end user needs — probably by increasing the ways that end user values can be communicated\"\r\n\r\nI hope this too, but lets not forget that there is very likely already more voluminous, frequent, and high quality dialogue between Free Software end users and developers than in any large scale software project on earth. Your statement sounds like this communication problem is unique to FOSS, and that it is a particularly pernicious problem for the community. I don't believe that this is so, and in my view the current level of organisation of interaction in the most important projects is already an incredible achievement of technology and collaboration. Look at launchpad, for instance (now GPL) - every aspect of development of an application like Inkscape is public and interactive to users, from bugs to release schedules, to blueprints of features, to translations, to feature requests and more. This is a level of project management and user dialogue that I have never heard of in any non FOSS application, so lets not generalise the issue of communication to make it into a unique and crippling problem for FOSS - the situation is building upon existing achievements day by day and already exceeds what the commercial sector can match.\r\n\r\n\"If [FOSS can't match proprietary functionality], then eliminating proprietary software deprives users of fundamental functionality. You have no freedom in software that doesn’t exist\"\r\n\r\n\"You can’t have an ethical discussion about free software and its impact on society unless you face the fundamental issues of production\"\r\n\r\n\"It is no more ethical to promote a system of free software when doing so will result in no software being written than it would be to promote a free produce initiative when doing so would mean no crops get planted\"\r\n\r\nThis is one of the most important points of your article, in my view. The statement that you make can, on the surface indeed seem true. For instance, if AutoCAD (for which there is currently no true FOSS alternative) cannot afford to continue development or switch to a free platform and goes under, then users will have lost functionality, they will have gained nothing, but no longer have the powerful tools that this application previously afforded. It doesn't matter why there's no FOSS alternative, but it could be because such a complicated application requires intensive paid development. What's the good in that? Useful software got killed by FOSS. So goes the argument.\r\n\r\nI believe that this reasoning overlooks fundamental principles about free software that are key to its success and nature. I believe that your view is inaccurate.\r\n\r\nYour argument assumes that FOSS is to some degree static, or at least that it will be in relation to the lost application of functionality. If AutoCAD ceased to exist, your argument implies, the niche that it served would remain forever unfilled, and those people affected would suffer. This is not so. FOSS is better placed than any other type of software to find the needs of people, put them in touch with each other, and enable them to create something that fills their needs quickly. If AutoCAD went under, it would be a great day for AutoCAD users in fact! This is because a new application, or set of applications would come to exist to meet the needs, but this application WOULD BE FREE. The application would be free and remain free, and thus CAD software would be liberated once and for all. Once the liberation process of a niche has been completed, history teaches us that it rarely reverts. The field would be opened up, and whatever replaced AutoCAD, which may well be basic and underdeveloped during its initial years and would likely not match previous AutoCAD functionality, would only be built upon, and in a way that was more tailored to user needs than ever before.\r\n\r\nFree Software evolves and adapts. The greater the need, the greater the response of the community and the faster a solution is developed.\r\n\r\nThis idea may seem hard to swallow. Would I honestly thank you for destroying the commercial gaming industry by advocating FOSS, when Free games don't come close to matching what commercial companies previously offered? Would I thank you in my bored evenings in which I used to play grand commercial titles that had cost millions to make?\r\n\r\nIn light of the short term goal of expelling my boredom, no, I would not. Indeed you would have deprived me of something important and valuable to me. Long term however, a games development community would arise that would be Free of charge and restriction, that reflected my wants better than before, and which was overall better quality and more diverse. I would, for the first time, be a member of the community that was responsible for the games that I played, and I would be a contributor to my own happiness and satisfaction. For that I, and more importantly the world at large, would thank you, in time. The industry would have been freed, along with all game enthusiasts.\r\n\r\nThus FOSS is not static. It fills niches. It grows organically in amazing ways with untold creativity and diversity. It is a better way of meeting needs, and turns consumers into contributors. One scrap of free software functionality is therefore more valuable to the individual and the community of computer users at large, than a vast edifice of commercial software. One has the potential to grow, collaborate, give back, diversify, address needs in an honest and progressive way. The other does not.\r\n\r\nThis view I have expressed reflects a faith in FOSS that the article author may not share, and I am happy to discuss these in their own right and defend my standpoint if it is so desired.\r\n\r\n\"You can’t have “open source software” (in the sense that open source advocates mean the words) without also having “free software” (in the sense that free software advocates mean the words)\"\r\n\r\n\"'Both are merely contractions of “free-licensed open source software'\"\r\n\r\n\"'Free Software' and 'Open Source Software' is the exact same artifact [sic], no matter who is promoting it, nor on what advantages of it they promote\"\r\n\r\nThis, in my view, is wholly incorrect. Richard Stallman, who has probably written and publicly said more about the philosophical and ethical nature of FOSS than anyone else, addresses this particular point in his article \"Why Open Source Misses the Point of Free Software\" (found here: http://www.gnu.org/philosophy/open-source-misses-the-point.html).\r\n\r\nEric Raymond and the OSI chose the term open source for a reason - that it did not convey the moral, ethical or social aspects of Free Software. In this way it appealed to business players whose support was valuable in spreading the prevalence of FOSS. Open Source is something that big business can understand and on occasion even accept. It is a development model, and for thousands of companies a business model too. It means very little when compared to Free Software. Open Source projects abound with a mess of different licenses, restricting freedoms here and there, ensuring the control and commercialisation of the project in question. Open source is the hip new buzzword of marketing execs - its a get rich quick scheme for businessmen all over the world. There is no depth to the term, there is no responsibility implied or association with freedom. Some companies and individuals may assume a greater meaning to the term open source, but that is superimposed by them - it is not part of the meaning of the phrase. Open source is the sanitised, baggage free version of Free Software. All the business benefits, none of the responsibilities or inconvenient drawbacks.\r\n\r\nAs a user myself, Freedom means something to me. Whether I am able to read the proprietary code of an open source project has no impact whatsoever on how I use software however - how I obtain it or how much it costs. Being able to study the project is about the only discernible advantage of an open source app. 'Look, but don't touch, but give me credit like you could do both'. Free Software however is a totally different phenomenon. Free Software is revolutionary. It is participatory. It respects and welcomes the user, all users, all human beings in fact. Many business and individuals are united in their interest in open source in order to make more money more quickly. Free Software advocates are united by far more profound and important objectives. I think that this is a distinction worth preserving.\r\n\r\n\"even the most abstract idea has to work in the real world, not just sound pretty, in order to be valuable\"\r\n\r\nIn a few paragraphs which encapsulate this quote you imply that FOSS is not as productive or effective at production of software as commercial software is. I strongly believe the contrary - Eric S. Raymond thoroughly establishes FOSS as a superior method of producing high quality code efficiently in his collection of essays \"The Cathedral and the Bazaar\", the details of which I shall not go into here. Whether or not FOSS can match commercial methods of software development is an important question that deserves continued study, but you don't bring any new evidence to the table here to discredit research already conducted, and therefore I don't feel that its reasonable that you call FOSS' productive efficacy into question in the quiet way that you do.\r\n\r\n\"if you can’t afford to make a thing, then it’s not going to matter how free you are to use it\"\r\n\r\nEric S. Raymond also addresses the question of whether a world of FOSS developers equals a world of unemployed penniless developers. He clearly argues to the contrary and elucidates his belief that the contrary is far more likely - a world with more, higher skilled developers than ever (and in which they can afford to eat).\r\n\r\n\"Can we really make a free software system that is every bit as usable as the proprietary alternatives? Can we make them work for non-expert end-users the way that proprietary companies like Microsoft can?\"\r\n\r\nWhy do you address this question to the future? We already have, and have had for several years the ability to offer end users a better product than Microsoft. Usability tests, conducted by Suse and others, have shown many times how KDE and GNOME are at least as intuitive and usable as commercial operating systems. With my own eyes I have seen user after user sit down at a GNU/Linux machine and 'simply know' how to most of what they want. What's more usability is constantly improving in response to forum discussions, polls, surveys (and the odd executive decision) - a fluidity of meeting need that is not matched elsewhere.\r\n\r\nIn terms of fundamental computing tasks, such as word processing, surfing the internet, emailing, playing media, I think many GNU/Linux distributions have offered the best experience for years. This is arguably a matter of opinion, but I am no means alone in my views on the matter. With more advanced users it becomes very much more tasks specific, and the quality of a particular application can make or break the possibility of a 100% FOSS solution. Even here however FOSS is pushing the boundaries.\r\n\r\nAre we up for it? What a question! The quality and pace of development in applications like Inkscape, Gimp, Ardour, kdenlive, KDE, OpenOffice, Eclipse and others leaves you in any doubt?\r\n\r\n\"Microsoft’s strangle-hold on the computer hardware production market is actually a benefit to users! Since they use their massive economic power to control the marketplace, they create an enormous incentive for manufacturers to ensure their equipment works with Microsoft software\"\r\n\r\nAgain, in my opinion this statement is totally fallacious. GNU/Linux relies on tens of thousands of reverse engineered drivers. The community has had to work in the most hostile territory imaginable when pursuing device compatibility! GNU/Linux now has better hardware compatibility than any other OS on earth - for in Linux compatibility only grows, there are no regressions, unlike windows which leaves thousands of devices in the dust with each new version. If FOSS can produce better compatibility than commercial competitors when it is given no information or support by manufacturers in most cases, where it not only faces technical but also legal antagonism (even when new drivers are written from scratch!), and where the variety of chipsets and devices number in millions (many wireless technology retailers change their chipset vendors every few months without any notification, documentation or announcement), then how can you say that Microsoft is responsible for a better environment for its users, an easier experience, a more reliable computer, better choice, or any other overarching advantage? As we can see - coercing manufacturers into ensuring compatibility with a monopoly results in neither compatible hardware or the best user experience! Think then what could be achieved if FOSS was actually supported rather than relentlessly attacked by hardware manufacturers.\r\n\r\n\"nearly every consumer device you pick up at the local discount store will work in Windows. You will have to be a lot pickier with GNU/Linux\"\r\n\r\nThis maybe true, but you miss a crucial point here - most hardware in use today is not currently purchasable from your local discount store. Most hardware is 'old' by commercial software terms, unsupported by the latest commercial operating systems, and useless to end users with new computers. As I have already stated - GNU/Linux has the widest hardware compatibility in the market. Not only the widest, but in some cases Free drivers supersede those supplied by the manufacturer (my USB wireless dongle gets approx. 40% extra range with Free drivers than if it uses its windows driver using a compatibility wrapper).\r\n\r\nMicrosoft cannot therefore offer the user a better experience. Its often nightmarish upgrading to Windows 7 from XP and wrestling with your sound card, your old printer and scanner, your graphics tablet, and a whole host of other devices. And that's just hardware!\r\n\r\n\"That’s tough to beat. We need an answer for it. On this uneven playing field. Do we whine and cry foul? Do we try to find a way to bend things our way? Or maybe we accept the loss, acknowledge that we lack this advantage and then try to explain why it’s worth making that sacrifice\"\r\n\r\nIt is hard to beat, it was hard to beat, but the community has already effectively beaten it. We have an answer for it - its called Free Software and it encompasses all technical problems in a unique and unmatched method all its own. Were this not the case, were GNU/Linux compatibility as bad as it was ten years ago (win modem hell, poorer printer compatibility etc.) then, as you say, it would be worth making the sacrifice. But today, for many users it is not a sacrifice, as they do not want to go and spend a thousand dollars to get all new peripherals, they want to use their perfectly good devices for which they have already paid their Microsoft taxes.\r\n\r\n\"Our specialty has to lie in lifting the veil and showing how things can work, and in making systems of software production and refinement that proprietary competitors can’t match\"\r\n\r\nI agree with your conclusion. However, as you have done throughout your article, you underestimate the value, power and achievement of what we already have. We are showing how things can work for FREE, we have been doing for a long time, and we are now at a stage of superseding commercial competitors in a variety of fields in terms of functionality, efficiency and ease of use.\r\n\r\nThis is my primary complaint with your article - in underestimating ground already consolidated by FOSS you undermine the whole phenomenon. Your stance is reminiscent of a Microsoft lackey, paid to pretend to know about FOSS and its advantages, but who presents a consistent vision of intrinsic inability and failings.\r\n\r\nYour subtle insistence that FOSS is currently unsuitable for most environments and users stems, I believe from your fundamental lack of faith (or is that misunderstanding?) of the Free Software model. This comes across particularly clearly in your statements about killing commercial functionality without a replacement - how can you assume that superior alternatives will not spring up given the miraculous achievements of existing FOSS projects today?\r\n\r\nBashing FOSS is important where its due in order to rectify problems that can be identified. I feel however that your article seditiously undermines what FOSS has to offer, and does so in a space that ensures the trust of the reader. Telling FOSS advocates that Free Software is currently poor without a single comment of complaint - shame on the readers!\r\n\r\nI am very thankful to the author for publishing this well written piece and sparking debate. As a consumer (or am I now a participant?) of your article I thank you for your time and hope that you see my extensive response as constructive, honest, and written with the best of intentions. I am sure that I have misrepresented you to some degree, so too am I sure that this being the case you will act on your responsibility to correct my words and analysis. With a response."
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'playing to strengths'
    hostname: 68.116.159.234
    created: '1257189416'
    body: "You quite rightly note that I am asking for free software to be better at things it already does better than any proprietary software. That is precisely the point, though -- we are not in a \"fair fight\" nor are we on a \"level playing field.\"  It's not enough to be a great player -- we want to _win_ (or don't we?).\r\n\r\nTherefore we need to play the advantages we have, and play them _hard_ if we want to win (or... we can concede the big game and play for a niche).\r\n\r\nWe have far too many apologists in our community ready to jump up and make excuses for why free software can't keep up with proprietary software in various areas (or equivalently that we would actually be better than the competition if the playing field were level). Most of what they say (you've included several of the standard arguments above), is _entirely true_. I agree 100%. It's totally unfair -- the deck is stacked, etc, etc. Those arguments would be great if we were trying to pass out moral judgments or decide who the best players were -- but the discussion here is about _winning games_.\r\n\r\nHere in the pages of Free Software Magazine, I can assume we are all pretty much in agreement that free software is _intrinsically_ superior to proprietary software -- but if that's true, then why isn't everyone using it? That gets beyond the software -- into how it is used, delivered, and integrated with the rest of the infrastructure. The proprietary world is still beating us there, and that's why we're still a niche player among end users.\r\n\r\nIf we are satisfied to remain in our niche, then the apologists have a point, and we can just sit back on our laurels. In other words, we can remain \"minor league\".\r\n\r\nOn the other hand, if we want to become mainstream (\"major league\") and seriously threaten big players like Microsoft who have bags of money to throw at the problem, then we need to be \"better all around\", not \"just as good\" or \"better in some ways\". If there are some areas where we can't close the gap (because the industry is just so unfair), then that means we have to be that much better in the areas where we can be.\r\n\r\nI would argue that the people who are so worried about criticism that they think only complementary posts patting developers on the back should be published, are the ones who don't believe in free software. Clearly, they think it needs to be \"protected\" and \"sheltered\" or it will wither and die. I think sheltering it is the worst thing you can do to it! Personally, I think it's like a cultivated weed that you can't kill if you tried to -- and therefore I think it's entirely appropriate to talk out in the open about how it can be improved. After all, we don't have a backroom channel between \"marketing\" and \"development\" -- we have to have our talks out here in the open.\r\n\r\nRight now, there continue to be serious misfits with respect to true end users. These create gaps that proprietary software fills. You are completely correct to point out that from a long-term social-utility perspective, these niches would be better filled by free software. But that's not how these decisions are actually made in a free market. In a free market, people make their decisions based on _short-term individual utility_ -- that is to say, immediate value to the user. Being focused tightly on that need is essentially what defines a person as an \"end user\"!\r\n\r\nAnd we're not going to _win_ until we are providing that individual utility better than the proprietary competition is. That would be a great loss, precisely because of the poorer social utility of proprietary software (e.g. it dies and is lost when the producer abandons it). But that loss is going to happen so long as we are content to sit back and watch instead of doing something about it.\r\n\r\nAnd all those folks clamoring so hard to \"defend\" free software from criticism: sorry folks, but you're harming the thing you love.\r\n"
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'A few additional remarks'
    hostname: 68.116.159.234
    created: '1257260373'
    body: "BTW, thanks for the civil tone in your post -- I didn't mention it before, but it is important if any meeting of minds is ever to happen in discussions, and I do appreciate it.\r\n\r\nI don't think we disagree as much as you imagine we do.\r\n\r\n_For myself_, I agree 100% that the trades are very much in favor of using free software. However, an objective analysis of my time shows that I do indeed spend a significant part of my working day struggling to get free software working with inadequate documentation and packaging on hardware that frequently is not supported well. Needless to say, I manage to overcome these obstacles, and it doesn't take a \"genius\" to do that -- but I'd be a fool not to notice that these are obstacles that would stop less experienced users.\r\n\r\nWhen I point out these gaps however, there is frequently a chorus of \"you're an idiot for not checking thus-and-such forums or documentations, etc\". To which my response is \"actually I did check those places and I solved _my_ problems\" and \"this is not about me, it's about people less experienced than me -- end users\".\r\n\r\nThen there's the excuses about how you can't expect volunteers to come to your service, etc. etc.\r\n\r\nThe message of such responses is that free software isn't for end users. Which contradicts the message (often from the same people) that free software should totally displace proprietary software (and be for everybody).\r\n\r\nThe point of this article is to point out that there are _two_ self-consistent views of free software -- you can't just mix and match to suit your mood:\r\n\r\nEITHER it's a niche-product serving technically literate users (i.e. \"minor league\"), in which case we don't have a lot of room to criticize the proprietary players who are serving the people that we as a community _refuse to serve_.\r\n\r\nOR it's a general-purpose mainstream market product for everyone (i.e. \"major league\"), in which case we _must be willing to serve all users_. In that scenario, the systems we have just aren't good enough yet -- they still require too much from the user to be considered competitive. That may not be obvious to people who take their own expertise for granted, but yeah, it's still true.\r\n\r\nIt doesn't matter that existing free software systems are \"better than the proprietary equivalents\" -- because the proprietary ecosystem has other advantages that we apparently can't touch (mainly a great deal more monetary capital). IOW, sure our tech support is better -- but most people never actually get to the point of using tech support! Proprietary software tech support sucks -- but is largely unneeded. Free software support isn't really competing against proprietary tech support -- it's competing against _not needing tech support most of the time_.\r\n\r\nWhy? Well a lot of it is stuff we can't do much about: pre-installation of software (so technicians do the hard work); highly-visible and available retail distribution and service chains (easy to get a pre-installed system, easy to get software installed for you); ability to influence law and policy to their favor; _de facto_ standards-setting; control of the hardware marketplace; and so on.\r\n\r\nWhy do they have those things? Because they have more money. Why do they have more money? Because 1) they charge money for most copies of their software in use and 2) they've been doing it for a long time without effective competition from free software. Their business models have much thicker margins than ours and they use that margin to secure their advantage. It's a harsh truth, but no one is served by hiding from it.\r\n\r\nThat's what makes them \"Goliath\" and us \"David\". My thesis is that we need to improve our slingshot skills. The fact that we are already a great deal better with a slingshot than Goliath is, is beside the point -- he doesn't need one to kill us.\r\n\r\nUsing free software must be a sufficiently better immediate experience than using proprietary software for users to switch over. They need to see that for less time, effort, and money they can do more of what they want using free software. They need to be able to do that without becoming experts (because they don't want to be experts -- much as you and I love computers, a lot of people just don't and won't).\r\n\r\n> Think then what could be achieved if FOSS was actually supported rather than relentlessly attacked by hardware manufacturers.\r\n\r\nWhat you need to be asking yourself is \"how are we going to achieve that end?\" The manufacturers aren't \"attacking us\". They are supporting the people who feed them.\r\n\r\nI haven't spent a lot of time promoting the advantages of free software in my article above -- I have done that in other articles (read 'em) and I want _you_ to do that, but keep in mind the target. This is not about convincing people like _me_ to use free software (because I've been using it for years), it's about convincing people who aren't even reading this because they think it's too technical (or boring) for them.\r\n\r\n> how can you assume that superior alternatives will not spring up given the miraculous achievements of existing FOSS projects today?\r\n\r\nI am assuming precisely the opposite. But it won't happen unless people get motivated to make it happen. Hence the article."
-
    name: Albertde
    mail: ''
    subject: 'The Prime Disadvantage of the Proprietary Model '
    hostname: 70.82.202.24
    created: '1260726685'
    body: "When I worked as a tech writer for a small software company, I discovered the prime disadvantage of closed source software.\r\n\r\nOne day, a programmer suggested that the company release a new version that would simply eliminate all the accumulated bugs. The project manager laughed at him, saying \"Do you think customers will pay to get all the bugs fixed?\". So the prime disadvantage of proprietary software is that there is <strong> no incentive to fix the bugs in their software</strong>.\r\n\r\nThis is not a theoretical position. In Microsoft Word, there is a bug outstanding and well-documented present in the software since the 1990's. This bug relates to Master Documents (Random characters disappearing from documents). The equivalent bug was identified and cleared in openoffice.org Writer.  "
