-
    name: JohnMc
    mail: ''
    subject: 'The Game?'
    hostname: 72.190.96.105
    created: '1213130322'
    body: "Lets understand something, MS did not create the numbers game -- their customers did. MS is just playing along. If the FOSS crowd does not understand that then woe is us. FOSS will always have a number foisted on it by the end customer -- always. It is how they make decisions. \r\n\r\nThat does not however mean that FOSS has to play the 'for-sale' game. But lets first throw away the 'free' canard. Any Fortune 5000 is going to be looking for support. The FOSS majors (Red Hat, MySQL, Postgres, etc) all provide professional support for a fee. For any corp, in their eyes therefore the software is not free even if they paid no purchase invoice. \r\n\r\nSo if its not free then what is the FOSS advantage? Lifecycle and Scale.\r\n\r\nBy Lifecycle I mean the ability to use the same software from prototype to datacenter without busting the budget. When you're building new ideas use FOSS. One of them pans our you still use FOSS. When the program gets to UAT the same FOSS is in use. Finally when it gets to production the licensed FOSS is substituted. All without the need to buy additional licenses for the early phases. The side benefit is that IT, if it has a standard suite its promoting, can not only accept the production code without complaint but support the early efforts without too much pain. \r\n\r\nScale of course in being able to utilize the same software regardless of the installation. FOSS has a better handle on that score. Nor does it play the fractured features game used by the proprietary purveyors. The added plus is that much of the scale issues for FOSS are pretty well known as well as their solutions. \r\n\r\nThe 'game' for FOSS is not to play the buy but the total corporate costs. FOSS should foster the adoption of IT FOSS standards. Promote the development of FOSS virtual appliances. Expand training opportunities at lower cost than the proprietary purveyors. \r\n\r\nBut lets not fool ourselves -- Free is not going to win the day. \r\n"
-
    name: 'Ryan Cartwright'
    mail: ''
    subject: 'Sounds like we agree'
    hostname: 212.159.106.192
    created: '1213136460'
    body: "> Lets understand something, MS did not create the numbers game -- their customers did. MS is just playing along. If the FOSS crowd does not understand that then woe is us. FOSS will always have a number foisted on it by the end customer -- always. It is how they make decisions\r\n\r\nWhen I say numbers game I am not referring to price at all. I am referring to number of installs, number of sales, number of units and users. Whilst MS may not have created that game they do encourage its continuity. It's they who keep coming out with studies and reports all related to the fact that number of installations and best sellers apparently matter. Their customers have swallowed it hook line and sinker and whilst we need to understand that game we do not need to play it.\r\n\r\nThere is also a huge difference between companies who build their business around free software -- like Red Hat -- and the free software community. The former can and should play the numbers game as part of its business plan but -- because of the freedom in the software -- even they do it on different terms to Microsoft. The numbers for Red Hat are related to associated services not software licence sales. If the free software community plays the numbers game -- that is if it becomes part of our philosophy for creating software with freedom running through it then woe is us indeed.\r\n\r\nYou've mentioned the word free a few times in a context that is against what I meant. I do not consider cost an important part of software deployment, certainly not as important as freedom. Any software project -- be it a home office suite or a multi-seat business roll-out should always consider cost but not as much as the longevity and sustainability of the project and that is whee the freedom comes in.\r\n\r\nWhen I say free software should not play the sales and marketing game, it is precisely because the cost is no longer the focus ( or at least it shouldn't be ). The cost still has a part to play but it is no longer the focus, the freedom is.\r\n\r\nThat is why and how the game has changed.\r\n\r\ncheers\r\nRyan"
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'Why do we care about the numbers?'
    hostname: 68.93.224.4
    created: '1213211017'
    body: "It's interesting to ask \"why do we care about the numbers?\"\r\n\r\nI think if you look at it from the proprietary software perspective, the numbers are a way of seeing how \"future  proof\" a piece of software is.\r\n\r\nIf it has a lot of sales and a strong company behind it, then it will continue to exist. And as long as it continues to exist, it will be supported (by someone, even if not by the originator) and your data (in proprietary formats) will continue to be accessible, and so on. (Among other advantages).\r\n\r\nIn other words, the customer is really looking for security.\r\n\r\nNow, of course, free software solves these problems in much more direct and complete ways. FS communities are far more resilient to low deployment numbers than are proprietary companies, for example (because the future proofing comes from the free availability of the source code, not the continued survival of the organization keeping the secret). Similar arguments can be made in many other areas of user concern.\r\n\r\nSo, it can easily be the case that a piece of free software has greater \"future proofing\" and \"data accessibility\" than the competing proprietary software, even should that proprietary software control more than 99% of the market versus 1% for the free software.\r\n\r\nIn other words, the deployment numbers may simply not be relevant to the thing the customer or user is really trying to glean from them.\r\n\r\nIn fact, I suspect the performance of the FS packages's community is more likely a factor of its _absolute size_ rather than its _share_ of the market -- since the issue for FS development is \"is the bazaar large enough to enable effective production?\".\r\n\r\nThe question that arises, then, is how can you convert _that_ information into a meaningful statistic rather than a qualitative hand-waving argument?\r\n"
