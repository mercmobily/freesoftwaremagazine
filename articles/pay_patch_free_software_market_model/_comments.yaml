-
    name: 'Luka Marčetić'
    mail: ''
    subject: 'Prior art'
    hostname: 78.134.147.46
    created: '1286977999'
    body: "Mike Linksvayer has brought to my attention the existence of a similar model to the one I laid out here. Readers may want to see the Linux Magazine post mentioned here for any \"prior art\": https://identi.ca/conversation/55248200\r\n\r\nTo my knowledge, however, there is no infrastructure that offers services described here. Pay Per Patch still needs work, so comments are encouraged. I would like to hear from parties interested in developing this further - please send your e-mails to: luka DOT marcetic AT foi DOT hr\r\n\r\nNote also that in order to be able to post ordinary comments here, you need to be logged in."
-
    name: 'Ryan Cartwright'
    mail: ''
    subject: 'Sounds good but...'
    hostname: 62.140.212.3
    created: '1286983920'
    body: "On the face of it this sounds like a good idea. Indeed I know of a few cases where particular functions or features have been sponsored by \"investors\" or groups of them. Reimbursing the coder for their time (instead of for the code) is at the heart of any sustainable software development model.\r\n\r\nThat said I can foresee some issues with this idea. Firstly you have based some of it on a popularity contest. History tells us that popularity does not always give a good idea of what is best. What happens when the developers want to take the software in a new direction but all the users want them to do is add feature X (which coincidentally mimics the leading proprietary alternative). Add to this that feature X might not be a good idea and you start running into situations whereby nobody wants to pay for what *needs* to be done.\r\n\r\nSecondly what happens if the patch doesn't meet the expectation of the investor? Do they get their money back? Is this a legal contract or just a donation with strings?\r\n\r\nAs a programmer I can tell you that there have been several cases when end-users have made requests which have been dangerously sparse in substance. I can also tell you that sometimes I have been asked to add something which would turn the product into something else entirely. While I am all for including users in development direction (indeed user consultation is vital to software development and project management) I worry that there could be undeserved negative kudos for a project simply because \"investors\" don't get what they think they have asked for.\r\n\r\nHaving said all that the idea does have merit and it is worth pursuing some kind of infrastructure to support it. Most of the models like this I have seen rely on investors making online payments or pledges and once the target is reached the developer sets about the work.\r\n\r\nBTW FSM used to have anonymous commenting but the signal to noise (e.g. spam) ratio was too low. Even with the requirement to have an account you'd be surprised at the amount of spam that gets posted here as comments but requiring logins puts many spammers off.\r\n--\r\nEquitas IT Solutions - fairness, quality, freedom\r\nhttp://www.equitasit.co.uk"
-
    name: 'Luka Marčetić'
    mail: ''
    subject: 'Re: Sounds good but...'
    hostname: 78.134.147.46
    created: '1287002480'
    body: "Thanks for your comment. Let me take it from the top:\r\n\r\n>What about necessary unpopular features?\r\n\r\nIndeed you are correct, if you fail to convince your users that a version update is necessary, you fall back to voluntarism for that particular feature. This is something not easily solved. I have thought about how to encourage unpopular innovation, but I have yet to think of something better than what we already have - ie \"support project\" donations. Taking it further, it is questionable whether the community will be able to sponsor research the way mega-corporations do. Pay Per Patch is about commercialization of free software, and right now that means tending to user's needs: Even if that sometimes means waiting for them to realize that they have a need.\r\n\r\n>What happens if the patch doesn't meet the expectation of the investor?  Do they get their money back? Is this a legal contract or just a donation with strings?\r\n\r\nInvestors do get their money back, and so we rely on the good will of the majority to judge the resulting patch fairly. I hope contracts aren't necessary (for public bazaars anyway); instead, developers take the risk of not being paid for something their users dislike. However, this may be slightly rectified by a hinted reputation system, using which we can introduce the guaranteed percentage for developer's time - and ensure that the same won't be abused. A similar reputation system may be applied to investors, so we can hopefully altogether exclude \"poisonous\" people.\r\nProgrammers, as well as users are involved in patch descriptions. It is expected that discussions would sort out any misunderstandings. It is only after this patch description making period that the users who remain interested can start investing, and programmers can start offering services (ie bid). No one is forced to invest if their feature is not explicitly mentioned in the final patch description, and only capable and willing programmers should offer their services.\r\n\r\nP.S. About comments: I understand that spam is a problem, but comments have now become rare. One thing that might help is removing the confusing \"Writing a full post in response to an article\" for users not logged in, and introducing a simple \"login to post comments\" instead. But this may be the CMS' problem."
