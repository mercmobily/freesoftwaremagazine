-
    name: 'Anonymous visitor'
    mail: bob@dodgeit.com
    subject: 'Bull****.'
    hostname: 202.92.44.173
    created: '1196234760'
    body: "If you choose not to publish information, then that is ok. Keep it hidden and do not tell another soul. If you choose to publish information, don't expect to control it. Protecting what should be public information is a massive mistake.\r\n\r\nIf I take your sandwich, you will no longer have a sandwich and you will grow hungry. If I take your coat, you will get cold. If I take your passport, you will no longer have the right to travel overseas. \r\n\r\nInformation is different to natural property. When you share ideas and information, nobody is deprived of that information. If I tell you my birthday, I do not suddenly forget when I was born. If I tell you my recipe for chicken and lentil broth, I do not suddenly forget how to make it. The value of information is greatest when it is shared. People do not create ideas in a vacuum. Ideas are always influenced by the experiences of people. Ideas are always built upon the ideas created before them. Ideas and information work best when it is shared. Information that is supposed to serve the public should not have the same protections as real property. The nature of duplicating information is usually trivial.\r\n\r\nComputer software is a tool. Software is a series of instructions that work together to perform a task or solve a problem. Software is information. The <strong>nature of digital information is that it is trivial to share</strong>. Therefore, no user should lose access to software when users share software. Users should not be penalised by helping their neighbours by sharing the tool known as software. \r\n\r\nThe potential for the supply of copies of software is essentially unlimited because of their nature of being trivially duplicated. Something that is not limited is support. Not everybody wants to be a programmer. Not everybody wants to learn arcane technical details to get their computers to work for them. The supply of providing services for software are a limited resource. This does not have to be protected because the act of providing services is limited by natural law.\r\n\r\nSoftware patents are a travesty because they effectively grant monopolies to ideas. Therefore, <strong>software patents hinder the progress of the software industry</strong> as software is a collection of ideas that are supposed to solve problems. It hinders the industry because when someone independently comes up with an idea that has been patented, patent law prevents society from profiting from the idea and forces the industry to reinvent the wheel over and over again."
-
    name: 'Tony Mobily'
    mail: ''
    subject: 'The article...'
    hostname: 124.169.181.56
    created: '1196238840'
    body: "Hi,\r\n\r\nI think you might have missed the point of the article, which is fact shows a lot of the flaws of software patent laws.\r\n\r\nPlease contact me (t.mobily @ freesoftwaremagazine dot com)!\r\n\r\nBye,\r\n\r\nMerc."
-
    name: 'Anonymous visitor'
    mail: amotz@anner.com
    subject: 'A few more arguments for patents'
    hostname: 212.199.242.58
    created: '1196241448'
    body: "1. Any program is formally equivalent to an arithmetic expression. So patenting software is equivalent to patenting arithmetic expressions. Now just consider the enormous increment in knowledge as each and every school boy/girl is forced to carry out a thorough patent search while doing homework. On the other hand the perennial \"dog ate my homework\" excuse, will have the perfect replacement in: \"Its patented. Sorry\".\r\n\r\n2. As business methods become susceptible to patenting, far seeing eyes turn to cooking recipes. I cannot see any difference between the two activities. Perhaps I'm just blind.\r\nHowever, there will now be a real need for that sublime gizmo,  the Internet connected refrigerator (stove, toaster, etc..). After all, it will be imperative to assure that cooking is not interrupted by a \"cease and desist\" letter from the RIAA equivalent handling cooking IP, followed by stiff fines and jail sentences for housewives trying to feed their families.  "
-
    name: 'Amotz Anner'
    mail: amotz@anner.com
    subject: 'Neglected to provide name and clearance.'
    hostname: 212.199.242.58
    created: '1196241806'
    body: "Sorry, I neglected to provide my name in my previous post.\r\nIn addition I would like to formally place these ideas in the public domain, to be freely re-used."
-
    name: 'Kyle Williams'
    mail: contact@kylewilliams.co.za
    subject: 'Yes, it appears he might'
    hostname: 196.35.158.180
    created: '1196246075'
    body: "Yes, it appears he might have missed the point. \r\n\r\nI started reading the article expecting you to defend software patents. I was pleasantly surprised when I was halfway through reading it and realised that in fact you were highlighting all the arguments in favour of software patents and arguing against them using historical and economic reasoning.\r\n\r\nA bit lengthy, but nicely written :)\r\n\r\nThanks"
-
    name: tz
    mail: thomas@mich.com
    subject: 'The problem is with trivial and obvious patents'
    hostname: 167.236.0.61
    created: '1196254954'
    body: "Mathematical Formulae have never been patentable anywhere to my knowledge.  Most algorithms are just that.  Prior art invalidates it.  Or if it isn't novel, or if someone else reasonably skilled in the art would come up with it.\r\n\r\nMost software patents are things undergraduate students could come up with over a weekend when presented with a similar problem, not the effort of years of research (something like finally proving Fermat's last theorem).\r\n\r\nCan you find an example of an existing software patent that you or one of the brighter programmers you know couldn't have come up with in a week, please point to it.  Lets argue actual cases instead of abstractions.  FIND SOMETHING PURELY SOFTWARE THAT IS TRULY INNOVATIVE.\r\n\r\nThere is a difference between taking care of a forest - I may then claim ownership - and merely walking through it.  Between building a table from a tree, and taking one branch from a tree felled by lightening.\r\n\r\nThe USPTO is completely understaffed and tends to grant patents for trivia.\r\n"
-
    name: 'Pieter Hintjens'
    mail: ''
    subject: 'In defense of the defense of software patents'
    hostname: 213.193.162.190
    created: '1196262383'
    body: "Two points.\r\n\r\nFirst, <i>all patents grant monopolies to ideas</i>, or rather to the market that depends on that idea.  A patent on a mechanical puppy or a drug is as much an exclusive right to an idea as a patent on a compression algorithm.  So, if monopolies on ideas are wrong, then all patents are wrong (and I'd tend to take this line).  Software patents are extra wrong for other reasons, which are explained in my article.\r\n\r\nSecondly, the article title is well, not a joke, but a little ironic.  There is really no defense for software patents.  None.  They are bogus, a fraud, a hoax, a con, a sham, a scandal, a travesty, an unmitigated abuse of power by a privileged elite.  We know this.  The article is meant to provide you with better arguments with which to fight pro-patent propaganda - since the real support for software patents all depends on extending existing patent dogma - than \"monopolies on ideas are bad\" and \"information is different to natural property\".\r\n\r\n"
-
    name: TemporalBeing
    mail: bm_witness@yahoo.com
    subject: 'You missed a big con for software patents...'
    hostname: 132.228.195.206
    created: '1196263007'
    body: "...the time it takes to get a patent.\r\n\r\nThe Software Industry itself changes greatly in a 2 to 5 year time span, yet it takes up to 8 years to get a patent. So by the time the patent is granted, it is basically useless to the owner. True - they have protection while they have the application in, but that only hinders innovation in that area during that time period - and that produces the same negative innovation effect regardless of whether the patent is valid or invalid.\r\n\r\nIf the Software Industry worked more like the Airline industry or Drug industry where innovation takes a lot of research and years to produce and verify, then there might be a case to grant patents; however, it doesn't. The Software Industry works with R&D in the months timeframe, and if you don't get the work out quick enough, the industry passes you buy and your work is all for naught. That is the key differentiator between the Software Industry and the rest of the industries - even music, art, books, etc.\r\n\r\nLet's also not forget that there is Trade Secret Law and Copyright Law too - both of which better suite to the arguments you provided above. Copyright law lets disclosure take place - though the ideas could be reproduced in different forms of expression, even so lawsuits could be brought but would be just as hard to prove. Trade Secret protects what companies (or individuals) have not released to the public.\r\n\r\n--Ben"
-
    name: 'Anonymous visitor'
    mail: james@mansionfamily.plus.com
    subject: 'Software patents ARE defensible if ANY patent is defensible'
    hostname: 147.114.226.175
    created: '1196271347'
    body: ">There is really no defense for software patents\r\n\r\nRubbish.  Suppose I develop a widget that uses an analogue computer - discrete logic and LCR filters and the like.\r\n\r\nLet us suppose that this is innovative and non-trivial in a manner that merits a patent.\r\n\r\nNow I take the same box and manage the external inputs and outputs with ADCs, DACs, volt-free switches and relays.  And I use a micro to emulate the previous circuitry, using similar transfer functions in my (digital) filters and so on.\r\n\r\nIs this now no longer worthy of a patent, simply because I have implemented in software?\r\n\r\nThat would be bizarre in the extreme.  Take your politicised stance that all patents are bad if you want (I won't - that would stifle investment) but patents are a reality and discriminating on the basis that software is involved in the implementation is absurd.  So there is necessarily a situation where patenting of something which has a software component - and where possibly the whole of it is software - is quite reasonable.\r\n\r\nYour truism can be destroyed with just one counterexample.\r\n\r\nI argue that historically the wrong things have been accepted for patenting, and I argued as much when I wrote to the EU commission urging them to reject the software patent process - until such time as we have a way to assess applications (and existing awards) appropriately.  Also, we need to acknowledge that the software artisan continually makes little inventions, solving each problem as she goes, which makes the process somewhat different to that of many professions.\r\n\r\nThe problem is not that software inventions can be patented per se, it is that we have allowed the wrong things to be patented - trivia and obvious things, that would come about through incremental refinements and reuse of approaches in different circumstances.\r\n\r\nBut that's a whole different thing to saying that all software patents are bad.  'We know this' you write.  And yet experience is that 'everybody knows' is a spectacularly poor basis for making any decision.\r\n\r\nIf you wish to argue that retention and protection of 'intellectual property' is flawed in and of itself in all forms, then do so - and see how far you get.  Its a different matter though.\r\n\r\n"
-
    name: 'Jan Henkins'
    mail: ''
    subject: 'Patents stimulate innovation...'
    hostname: 195.224.201.205
    created: '1196273952'
    body: "Very interesting piece, I had to read it twice before I caught on to Pieter's intent, mainly due to the high levels of \"kneejerk\" the topic causes me. So we all know, innovation is not directly stimulated by software patents. One thing I can concede: it is important to be able to protect yourself against the theft of property, but that should be a copyright issue, not a patent issue. Even so, copyright is a grey area, very much akin to patents (for instance, you only have to look at the printed sheet music industry to find out the interesting ways companies can twist copyright laws. Good example would be the IMSLP [1] debacle). Where patents effectively stifle innovation is in the private sector, where small companies (and even private individuals) innovate with radical ideas, scratching individual itches and so forth. Software patents are a real danger to this fertile melting pot, because these individuals have to constantly look over their shoulders or do research in patents (a very expensive pastime, totally out of reach of private individuals). If I have to do patent research before I write that little BASH script, would it ever get written? Not likely. OK, I'm not a good enough coder that the world would mourn the loss of my l33t code, but the principle stands. What if Linus could not write the Linux kernel, or RMS couldn't write Emacs, all due to patent interference? Or none of the BSD's could be created due to patents? Hmm, my Netgear router would have been running something like CE or a proprietry OS like QNX, and would have cost at least 3 times as much! :-)\r\n\r\nWhy should people with such a great potential be kept at ransom even before they have written a single line of code, out of fear of possible litigation from \"Large Company X\"? This is \"patently ridiculous\"! By all means, copyright your code with a proper license! It still gives you a powerful platform from which to protect your work. However, to stifle innovation by patenting \"ideas\" (which most software patents really are, we have \"single click online shopping\" and other interesting patents out there to trip us up...) instead of actual \"code\", simply creates a stream of revenue for the legal systems of various countries. No-one in the software industry, whether they be plaintiff or defendant, will be clear winners in this situation. The whole idea of \"The Chinese Are Coming\" is rather funny in a very alarming way - who's fault is that anyway? The very fact that the Chinese are capitalizing (communists capitalizing on capitalism, wow, supreme irony...) points to the true problem here: <strong>It's possible to patent software!</strong> And now the Chinese are indeed coming, with loads of big sticks designed by yourself (meaning the pro-patent frats, not the author of this article), and boy are you going to receive a beating! :-) So, who will be the clear winners here? I suppose time will tell. But it's going to be a very bumpy ride.\r\n\r\nLink from above:\r\n[1] IMSLP, International Music Score Library Project - http://www.imslp.org/wiki/Main_Page"
-
    name: jzakiya
    mail: ''
    subject: 'Patents are for implementations, not ideas.'
    hostname: 98.204.34.52
    created: '1196373373'
    body: "The U.S. Constitution granted limited rights to \"inventions\" for the furtherance of society. Thus, you can't patent the \"idea\" of a carburetor, mousetrap, solid state transistor, or laser. What you are only supposed to be able to patent are specific implementations, which is why patents must disclose the \"invention.\" If you don't want to disclose your specific implementation then don't patent, keep it a secret (if you can).\r\n\r\nSo the US Founding Fathers did not believe ideas were property which deserved privileged ownership. Some people in this country want to conveniently ignore this reality.\r\n"
-
    name: 'Anonymous visitor'
    mail: lauseras@studi.informatik.uni-stuttgart.de
    subject: 'The purpose of patents'
    hostname: 129.69.215.59
    created: '1196609388'
    body: "A thing most people miss when it comes to patents, is the reason why patents where originally introduced: This wasn't done to provide a money printing machine for the inventor of some technology (as patents are nowadays seen by proponents), but in order to encourage the publishing of ideas of the technological innovations so that others could build on them. In exchange the patent holder got a limited monopoly on his idea. So the idea was to _promote_ progress. \r\n\r\nNow look at how patents - and especially software patents - are implemented today: Their ideas are often trivial design decisions that naturally emerge during the course of solving a problem. Heck, in most cases there is even prior art, but since there is such a flood of patent applications the prior art usually stays below the radar. The end result is that the _currently implemented_ patent system _discourages_ progress instead of promoting it as it should. Honestly in most areas we would be better of if the \"innovations\" covered by patents would simple be kept secret. (And for software that's easy!)"
-
    name: 'Anonymous visitor'
    mail: me@here.net
    subject: 'You don''t defence your main premise'
    hostname: 87.202.14.224
    created: '1196623207'
    body: "You are correct about stating that:\r\n\r\n<cite>\"Software patents ARE defensible if ANY patent is defensible\".</cite>\r\n\r\nBut then you go on to write a lengthy comment describing the above relation without offering any defense whatsoever about your main premise:\r\n\r\n<cite>\"Take your politicised stance that all patents are bad if you want (I won't - that would stifle investment)\"</cite>\r\n\r\nI disagree and I would offer that patents stifle innovation (which investment follows). There should be no patents at all, and maybe only limited copyright (3-7 years).\r\n\r\nHistorically for example, the USA after its independence didn't accept patents and copyrights (something that infuriated the then status quo in Europe), something that helped it to innovate, create and prosper. It seems that the \"need\" for patents is only created when there are entrenched big players that need protection to shield them from competition.\r\n\r\nBtw, please don't use language such as <cite>\"your politicised stance\"</cite>, that only distort and try to ridicule the opposite side, without offering any arguments. Are we to suppose that your opinion in contrast is not politicized and thus more correct and maybe \"noble\"? Plueash!\r\n"
-
    name: 'Mark Walters'
    mail: patentmark@gmail.com
    subject: 'Software Patents'
    hostname: 65.126.57.227
    created: '1196714260'
    body: "The way to get rid of bad software patents is to increase the quality of examination and prior art review.  Getting rid of software patents all together is a bad idea in my view.  Please see my post on this topic.\r\n\r\nhttp://www.wapatents.com/2007/12/in-defense-of-software-patents.html"
-
    name: 'Paul H.'
    mail: paul@wolfbone.ath.cx
    subject: '"Is this now no longer'
    hostname: 81.152.217.31
    created: '1196775292'
    body: "\"Is this now no longer worthy of a patent, simply because I have implemented in software?\"\r\n\r\nImpossible to answer. Firstly, you haven't said what it is you would be claiming patent rights over. The digital/analogue, hardware/software issues are not relevant: excluding software patents really means excluding claims over inventions in information processing. (cf. FFII amendments to CII Directive, comments in CFPH LLC* etc.) - \r\n\r\nSecondly, whether 'software patents' should be allowed or not is not an issue that can be settled (or even illuminated) by considering the 'worthiness' of individual real or hypothetical inventions.\r\n\r\n* http://www.bailii.org/ew/cases/EWHC/Patents/2005/1589.html\r\n\r\n\"It was the policy of the \"computer program\" exclusion [EPC] that computer programs, as such, could not be foreclosed to the public under patent law. (Copyright law is another matter.) They would be foreclosed if it was possible to patent a computer when running under the instructions of the program, for example, or magnetic disk when storing the program.\""
-
    name: sepreece
    mail: ''
    subject: One-sided
    hostname: 64.198.211.64
    created: '1196804039'
    body: "The problem with the piece is that it poses as a defense of software patents, but contents itself with positing and knocking down strawmen, presenting only one side of the debate. I agree with the author that many software patents should be invalidated and that we don't really need them, but there's a certain intellectual dishonesty in pretending to present the other side's case while doing so only superficially.\r\n"
-
    name: 'Terry Hancock'
    mail: ''
    subject: One-sided
    hostname: 68.93.224.4
    created: '1197475163'
    body: "Yes, I agree with this sentiment. I actually tried to post a couple of statements to that effect, but got bogged down and side-tracked so I dropped them.\r\n\r\nBut I think you've summed it up nicely. It's not that the arguments presented aren't valid -- possibly even valid enough to make the whole issue rather clearcut -- but rather that the presentation undercuts the point by ignoring the valid arguments of the opposition.\r\n\r\nFor example, it is clear that the ability to get patents *does* attract capital and that capitalization *is* necessary for people to spend money developing software. So, if the only model you understand for writing software is the proprietary one, which involves paying professional programmers money up front (which must therefore come from your capital), then as an entrepreneur, you would certainly be exasperated by the inability to attract that capital which would result from banning software patents.\r\n\r\nThe inability to develop software under this old model *is* a legitimate shortcoming of an anti-software-patents stance.\r\n\r\nThat's a real argument, which according to the title, should've been presented as such. Now, it has holes -- but they're mostly of a paradigmatic type: you must retrain yourself to frame the problem in a completely different way in order to fully understand what's wrong with it.\r\n\r\nThe real argument here is not that that isn't a drawback, but rather that it is not *enough* of a drawback to counter the benefits of eliminating software patents.\r\n\r\nThis article doesn't succeed so well, because it doesn't help anyone from the old mindset to transition to your PoV. Thus, it ultimately succeeds only in \"preaching to the choir\" -- those of us who already understand the newer paradigm (and apparently doesn't do that too well, since many of the choir appeared to believe your title rather than your article).\r\n\r\nSo the article could've been a lot better, but on the plus side, the raw material of the arguments themselves is very useful for those of us in the choir. `:-)`\r\n"
-
    name: 'Pieter Hintjens'
    mail: ''
    subject: 'No software industry without patents?'
    hostname: 213.193.162.190
    created: '1197483361'
    body: "I'm curious to know how you can claim that patents attract capital and that this is needed to develop software.  The software industry is most vigorous in exactly those areas that are not patented.  Patents have been shown, in studies, to divert resources from R&D.  Patents are a protectionist mechanism, it is impossible that these help what is essentially a collaborative innovation process.  Protectionism vs free trade.  That is the key clash of theories when it comes to software patents.\r\n\r\nIf you support software patents, in any sense at all, you should also support tariffs on foreign software, grants to local software producers, taxes on all programming, licenses to limit the number of programmers per city, exclusive rights to accredited software houses, etc. etc.\r\n\r\nFree trade in ideas and information is what drives the software industry.  Patents are barriers to that.\r\n\r\nI do not know of a single case where patents have driven innovation or investment in software.  If you can show some, that would be useful.  Otherwise your claims cannot be supported.\r\n\r\nPatents attract capital, indeed, but that capital is used for very counter-productive things.  Litigation, maintenance of monopolies, purchasing of state favors, and so on.  I see a lot of capital being put into patent war chests like Intellectual Ventures.  I don't see that being spent on code.\r\n\r\nThe alternative protection mechanisms for software are not perfect.  Copyright is far too long.  So a kind of narrow, cheap, safe, and limited design right could give the stated (theoretical) benefits of patents without the many (proven) costs and dangers.\r\n\r\nAs for the form of the article, I found it rather fun to write in this form.  The point was to deconstruct the main arguments for patents in general and software patents in specific.  There is no convincing of patent advocates to be done; anyone affected by patents has economic motives to like or hate them.  Dialog does not change this.  The arguments I presented are tools for discussion with more neutral minds: politicians, academics, judges.\r\n"
-
    name: 'Terry Hancock'
    mail: ''
    subject: 'More strawman problems...'
    hostname: 68.93.224.4
    created: '1197504701'
    body: "\"I'm curious to know how you can claim that patents attract capital and that this is needed to develop software.\"\r\n\r\nWell, that's easy: \"I didn't.\" ;-)\r\n\r\nI made the former claim (which you later concede: \"Patents attract capital, indeed\"), but not the latter claim (which you refute as if I did claim it). This is the classical construction of a strawman (opponent claims A, so you refute A+B by disproving B), which may be useful as propaganda but is not constructive as an argument.\r\n\r\nWhat I did claim, which you ignore, is that the people you need to convince *believe* that significant capital investment is needed to create software, and that you are not effectively communicating to them if your point is that it isn't (or that 'the amount of lost capital due to losing software patents is more than compensated by the lack of negative effects due to software patents' which is a more realistic position).\r\n\r\n\"There is no convincing of patent advocates to be done; anyone affected by patents has economic motives to like or hate them. Dialog does not change this.\"\r\n\r\nDeeply cynical, though perhaps true.\r\n\r\n\"The arguments I presented are tools for discussion with more neutral minds: politicians, academics, judges.\"\r\n\r\nI'm amused that you think politicians are \"neutral\". My turn to be cynical perhaps.\r\n\r\nBut the real point is that I think you will fail to get any point across even to such a \"neutral\" audience. They are actually who I'm thinking of when I say \"the opposition\" -- people who presently believe that software patents are necessary or at least beneficial, but who *can* be persuaded. Of course, there are 'lost causes', but you may be giving up too easily, or else you don't understand the problems of this \"neutral\" audience.\r\n\r\nTheir problem is that they are stuck in a certain mental model -- a model which has been hard-sold to them by patent advocates for decades (about 30 years for software patents themselves, and more than a 100 for patents in general). \r\n\r\nIn this model, all innovative progress occurs in entrepreneurial business start-ups, which must have capital to get anywhere. In order to attract that capital they must prove a competitive advantage, something that creates a barrier to entry for other start-ups with similar ideas and goals. You need this, because the capitalist system relies on concentrating resources, via the mechanism of capital investment, in order to avoid duplication of effort and spreading resources too thinly to accomplish anything.\r\n\r\nNow once you are locked into this mental paradigm, the pro-software patents argument makes sense (note that this model is even more likely to be believed by people who are NOT software developers or entrepreneurs).\r\n\r\n*Our* job, therefore, must be to *smash this paradigm*.\r\n\r\nBecause what's really going on is that software patents uphold this paradigm to the detriment of others (such as free software development in the 'bazaar' paradigm) which rely on the free exchange of information. But this system is diametrically opposed to the requirements of the centralized, entrepreneurial development approach.\r\n\r\nThe overall negative impact of patents on innovation which you allude to via studies is (IMHO) most likely due to the superiority of the open paradigm in software development (or any development where collaboration and creativity are fundamental and genuine capital expenses are small).\r\n\r\nEven today, however, that is not a mainstream idea.\r\n"
-
    name: 'Paul H.'
    mail: paul@wolfbone.ath.cx
    subject: 'I''m surprised Pieter hasn''t'
    hostname: 81.152.217.31
    created: '1197798326'
    body: 'I''m surprised Pieter hasn''t addressed your criticism directly. There is no pretence or intellectual dishonesty in his article. All the pro-software arguments he makes and counters were used by the pro-swpat lobby in the run-up to the CII Directive vote and appeared in forums, press articles and even letters from MEPs. They cannot therefore be described as strawman arguments.'
-
    name: 'Pieter Hintjens'
    mail: ''
    subject: 'Capitalization and software development'
    hostname: 213.193.162.190
    created: '1197799051'
    body: "Terry, you said, \"the ability to get patents does attract capital and that capitalization is necessary for people to spend money developing software\", and then that \"if the only model you understand for writing software is the proprietary one... then as an entrepreneur, you would certainly be exasperated by the inability to attract that capital which would result from banning software patents.\"\r\n\r\nIn other words, the class pro-software patent argument that without patents, people will not invest in the proprietary software industry.\r\n\r\nA US study of VC-funded software startups in 2000 found that after four years only 20% had applied for one or more patents, 80% had not.\r\n\r\nThe US software industry grew at a time when capital flowed freely without the ability to patent anything. The European software industry never really had this ability except in some fields such as telecoms.\r\n\r\nThe ability to patent is not a prerequisite for attracting funding or capital.  And capital in any significant quantity is not needed for investment in software, free or proprietary: software products typically develop based on rapid market response, not heavy capital investment.\r\n\r\nAs for the neutrality of politicians, yes, I believe that they accept anyone's money in much the same way.  "
-
    name: 'Paul H.'
    mail: paul@wolfbone.ath.cx
    subject: '"but rather that the'
    hostname: 81.152.217.31
    created: '1197799696'
    body: "\"but rather that the presentation undercuts the point by ignoring the valid arguments of the opposition.\"\r\n\r\nContinuing my reply to the parent... I honestly don't recall reading or hearing any valid arguments put forward by the opposition. I'm sure this one:\r\n\r\n\"you would certainly be exasperated by the inability to attract that capital which would result from banning software patents.\"\r\n\r\ndid turn up at some point, and perhaps Pieter hasn't dealt with it thoroughly enough, but it's both laughable from the perspective of swpat and sw industry history and a non sequitur."
